<?php
include_once "networkevent.php";
$ENTRIES_PER_FILE = 300;
//set headers
$turn_on_download = true;
if ($turn_on_download){
header("Cache-Control: public");
header("Content-Description: File Transfer");
header("Content-Type: application/zip");
header("Content-Transfer-Encoding: binary");
header("Content-disposition:attachment; filename=output.zip");
}
//set php parameters (execution time limit: 100s, upload_max_filesize and post_max_size:1000MB)
set_time_limit(10000); 
ini_set("memory_limit","500M");
ini_set("upload_max_filesize","125M");
ini_set("post_max_size","250M");
//create output zip file
$temp = tempnam(".","");
$zip = new ZipArchive();
$res = $zip->open($temp, ZipArchive::CREATE);
$start_date = strtotime($_POST['start-date']);
$file_list = array();
array_push($file_list, $temp);
$all_data = array();
$day_list = array();
$file = $_FILES['file-input1']['tmp_name'];
$handle = fopen($_FILES['file-input1']['tmp_name'],"r");
$content = fread($handle, filesize($file));
$tok = strtok($content, "\n");
$tok = strtok("\n");
while ($tok!==FALSE){
//	echo $tok . "</br>";
	$event = new NetworkEvent($tok);
	$event = new NetworkEvent($tok);
	$tmpTime = $event->tags['originTime'];
	$eventTime = DateTime::createFromFormat("Y-m-d H:i:s", $tmpTime)->getTimestamp();

	if ($event->getCode()!=="" and in_array($event->getCode(), $day_list) == False and $start_date <= $eventTime){
		array_push($all_data,$event);
		array_push($day_list, $event->getCode());
	}
	$tok = strtok("\n");
}

fclose($handle);
$i = 0;
$count = 1;
while ($i<count($all_data)){
	$tmp_xml = tempnam(".","");
	$temp_xml = fopen($tmp_xml,"w");
	$j = $i + $ENTRIES_PER_FILE -1;
	if ($j>=count($all_data))
		$j = count($all_data)-1;
	fwrite($temp_xml,networkEventDataset($all_data,$i,$j));
	array_push($file_list, $tmp_xml);
	$zip->addFile($tmp_xml, "output_" . $count++ . ".xml");
	fclose($temp_xml);
	$i = $i + $ENTRIES_PER_FILE;
}
$zip->close();
readfile($temp);	
foreach ($file_list as $del_file)
	unlink($del_file);

function startsWith($haystack, $needle)
{
    $length = strlen($needle);
    if ($length == 0) {
        return true;
    }
    return (substr($haystack, 0, $length) === $needle);
}
function networkEventDataset($all_data, $start, $end){
	$result = '<?xml version="1.0" encoding="UTF-8"?>'. "\r\n";
	$result .= '<wovoml xmlns="http://www.wovodat.org" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version ="1.1.0" xsi:schemaLocation="http://www.wovodat.org/WOVOdatV1.xsd">' . "\r\n";
	$result .= "<Data>\r\n";
	$result .= "<Seismic>\r\n";
	$result .= '<NetworkEventDataset>' ."\r\n";
	for ($i=$start;$i<=$end;$i++){
		$result = $result . $all_data[$i]->toXml()."\r\n";
	}
	$result .= "</NetworkEventDataset>\r\n";
	$result .= "</Seismic>\r\n";
	$result .= "</Data>\r\n";
	$result .= "</wovoml>\r\n";
	return $result;
}
?>
